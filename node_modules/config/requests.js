var request =  require('request');
var mysql = require('mysql');
//DB connection
var connection = mysql.createConnection(
    {
      host     : 'localhost',
      user     : 'root',
      password : '1234',
      database : 'node_test'
    }
);
connection.connect();
//Function for Sign up
//parameter -> token(Registration ID), userID , userPW(password)
//after write on DB , response data meaning 'yes'
exports.signup = function(token, userID, userPW, name, sex, callback){
	var que = "SELECT * FROM tmp_client WHERE id='"+userID+"'";
  	var query = connection.query(que, function(err, rows){
		if(rows.length ==0){
  
			//query for newest DB
  			var que = "INSERT INTO tmp_client(id, pw, name, sex, token) VALUES('" + userID +"', '" +userPW+"', '" + name +"', '" + sex +"', '" + token +"')"; 
  			var query = connection.query(que, function(err, rows){
    				if(rows.length == 0){
      					callback({'response':"Failure"});
    				}
    				else{
      					callback({'result':"Y",'method':"signup"});
    				}
  			});
  		}
  		else{
			var que2 = "SELECT no, partner from counseling_log where client='"+userID+"'";
			var query2 =  connection.query(que2, function(err, rows){
				if(rows.length == 0){
					callback({'response':"No chatRoom"});
				}else{
					var no_log = rows[0].no_log;
					var partner = rows[0].partner;

					callback({'result':"Y",'no_log':no_log,'partner':partner,"method":"makechat"});
				}

			});
			//callback({'response':"joong bok"});
  		}
  	});
}
//Function for send message
//parameter -> no_log(index of chat room), time_message(time when message was sent)
//log(message), log_from(who send message e.g. client or partner), device(iphone or android)
//After write DB , Send data to GCM server using json and post method
exports.send = function(no_log, from_id, msg, to_id, time_msg, device, callback){
  	var no= false;
  	//searching with client id
  	var que = "SELECT token FROM tmp_client WHERE id='" + to_id + "'";
  	console.log(que);
  	var query = connection.query(que, function(err, rows){
		if(rows.length == 0){
      			callback({'response':"Failure"});
    		}
    		else{
			var token = rows[0].token;
			console.log("token:"+token);
      			var que2 = "SELECT no FROM log_counseling WHERE no_log="+no_log+" order by id desc limit 1";
			console.log(que2);
      			var query2 = connection.query(que2, function(err, rows){
        			if(rows.length == 0){
          				no = Number(1);
					console.log("length=0 so no = "+no);
					var que3 = "INSERT INTO log_counseling(no_log, no, time_message, log, log_from, device) VALUES("+ no_log+", "+no+", '"+time_msg+"', '" + msg +"', '" + from_id +"', '" + device +"')";
		      			console.log(que3);
		      			var query3 = connection.query(que3, function(err, rows){
		        			if(rows.length == 0){
		          				callback({'response':"Failure"});
		        			}
		        			else{
							request(
					              { 
					                method: 'POST', 
					                uri: 'https://gcm-http.googleapis.com/gcm/send',
					                headers: {
					                  'Content-Type': 'application/json;charset=utf-8',
					                  'Authorization':'key=AIzaSyCiZjmiUXUqstsUyR63pKTYtq59Go_-KmI'
					                  //APIKEYÀÔ·Â
					                },
					                body: JSON.stringify({
					                  //"registration_ids" : [to_id],
					                  "registration_ids" : [token],
					                  "data" : {
					                  "msg":msg,
					                  "from_id":from_id,
					                  "to_id":to_id,
					                  "time_msg":time_msg,
					                  "method":"chat"
					                  },
					                "time_to_live": 108
					                })
					              }
					              , function (error, response, body) {
					                callback({'response':"Success" + "/ " + msg});
					              }
					          )
		        			}
		      			});
        			}	
        			else{
					console.log(rows);
					no = rows[0].no;
        				no++;
					console.log("length != 0 so no:"+no);
					var que3 = "INSERT INTO log_counseling(no_log, no, time_message, log, log_from, device) VALUES("+ no_log+", "+no+", '"+time_msg+"', '" + msg +"', '" + from_id +"', '" + device +"')";
		      			console.log(que3);
		      			var query3 = connection.query(que3, function(err, rows){
		        			if(rows.length == 0){
		          				callback({'response':"Failure"});
		        			}
		        			else{
							request(
					              { 
					                method: 'POST', 
					                uri: 'https://gcm-http.googleapis.com/gcm/send',
					                headers: {
					                  'Content-Type': 'application/json;charset=utf-8',
					                  'Authorization':'key=AIzaSyCiZjmiUXUqstsUyR63pKTYtq59Go_-KmI'
					                  //APIKEYÀÔ·Â
					                },
					                body: JSON.stringify({
					                  //"registration_ids" : [to_id],
					                  "registration_ids" : [token],
					                  "data" : {
					                  "msg":msg,
					                  "from_id":from_id,
					                  "to_id":to_id,
					                  "time_msg":time_msg,
					                  "method":"chat"
					                  },
					                "time_to_live": 108
					                })
					              }
					              , function (error, response, body) {
					                callback({'response':"Success" + "/ " + msg});
					              }
					          )
		        			}
		      			});
        			}
      			});
			console.log("why it executed first  ?? no:"+no);
      			
    		}
  	});
}
//Function for load message
//parameter-> index(first time index is 0, and it increment e.g.6 ->12->18 it handle on client)=no,
//no_log(index of chat room)
//this function load 6 msg each event
exports.loadmsg = function(index, no_log, callback){
  	var i_var=parseInt(index)+parseInt(6);
  	//query for newest DB
  	var que = "SELECT * FROM log_counseling WHERE no_log = " + no_log +" ORDER BY id desc limit " + index +", " + i_var;
 
  	//var que = "SELECT * FROM tmp_log WHERE no_log = " +no_log+" ORDER BY id desc limit "+ index + ", " +i_var;
  	console.log(que);
  	var query = connection.query(que, function(err, rows){
		if(rows.length == 0 ){
			callback({'response':"Failure"})
      		}
      		else{
        		callback(rows);
		}
  	});
}
//Function for makechat
//parameter
//this function occur when the chat room was established first time and write basic date on DB
exports.makechat = function(time_start, partner, client, callback){
  	var que = "INSERT INTO counseling_log(time_start, partner,client) VALUES('"+time_start+"','"+partner+"', '"+client+"')";
  	console.log(que);
  	var query =  connection.query(que, function(err, rows){
		if(err){
          		callback({'response':"Failure"});
		}
      		else{
          		var que = "SELECT no FROM counseling_log WHERE time_start='"+time_start+"' and partner='"+partner+"' and client='"+client+"'";
          		console.log(que);
	  		var query = connection.query(que, function(err, rows){
            			if(rows.length == 0){
               				callback({'response':"Failure"});
            			}	
            			else{
              				var no_log = rows[0].no;
              				var que2 = "SELECT token FROM tmp_client WHERE id='"+client+"'";
              				var query2= connection.query(que2, function(err, rows){
              					if(rows.length == 0){
              						callback({'response':"Failure"});
              					}	
              					else{
              						var token = rows[0].token;
              						request(
					              { 
					                method: 'POST', 
					                uri: 'https://gcm-http.googleapis.com/gcm/send',
					                headers: {
					                  'Content-Type': 'application/json;charset=utf-8',
					                  'Authorization':'key=AIzaSyCiZjmiUXUqstsUyR63pKTYtq59Go_-KmI'
					                  //APIKEYÀÔ·Â
					                },
					                body: JSON.stringify({
					                  //"registration_ids" : [to_id],
					                  "registration_ids" : [token],
					                  "data" : {
					                  "no_log":no_log,
					                  "partner":client,
					                  "method":"makechat"
					                  },
					                "time_to_live": 108
					                })
					              }
					              , function (error, response, body) {
					                callback({'no_log':no_log, 'partner':partner,'method':"makechat"});
					              }
					          )
					          
              					}
              				});
              				
              				//callback({'no_log':no_log,'partner':partner});
        			}
          		});
          
      		}
  	});

}
